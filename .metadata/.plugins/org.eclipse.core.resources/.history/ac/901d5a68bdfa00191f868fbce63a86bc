import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;

public class GramSchmidtTest {

	@Test
	public void testKhanExampleSmall() {
		List<Vector> vectors = new ArrayList<Vector>();		
		vectors.add(new Vector(4, new double[]{0, 0, 1, 1}));
		vectors.add(new Vector(4, new double[]{0, 1, 1, 0}));
		vectors.add(new Vector(4, new double[]{1, 1, 0, 0}));

		List<Vector> resultActual = GramSchmidt.gramSchmidt(vectors);
		System.out.println(resultActual);
		List<Vector> resultExpected = new ArrayList<Vector>();
		resultExpected.add(new Vector(4, new double[]{0, 0, 1 / Math.sqrt(2), 1 / Math.sqrt(2)}));
		resultExpected.add(new Vector(4, new double[]{0, Math.sqrt(2/3), 0.5 * Math.sqrt(2/3), -0.5 * Math.sqrt(2/3)}));
		resultExpected.add(new Vector(4, new double[]{3 * (1 / (2 * Math.sqrt(3))), 
				1 / (2 * Math.sqrt(3)), -1 / (1 / (2 * Math.sqrt(3))), 1 /(1 / (2 * Math.sqrt(3)))}));
		System.out.println(resultExpected);

		for (int i = 0; i < 3; i++) {
			assertArrayEquals(resultExpected.get(i).getData(), resultActual.get(i).getData(), 0.00001);				
		}
	}

}
