import static org.junit.Assert.assertEquals;

import java.util.ArrayList;
import java.util.List;

public class GramSchmidtTestVisual {
	
	public static int NUM_VECTORS = 50;
	public static int VECTOR_SIZE = 50; 
	
	public static void main(String[] args) {
		List<Vector> vectors = new ArrayList<Vector>();	
		for (int i = 0; i < NUM_VECTORS; i++) {
			vectors.add(new Vector(VECTOR_SIZE)); 
			vectors.get(i).addRandomData();
		}

		double[][] matrix = new double[NUM_VECTORS][VECTOR_SIZE];
		List<Vector> result = GramSchmidt.gramSchmidtModified(vectors);
		for (int i = 0; i < result.size(); i++) {
			for (int j = 0; j < result.size(); j++) {
				matrix[i][j] = result.get(i).innerProduct(result.get(j));
			}
		}
		
		for (int i = 0; i < result.size(); i++) {
			for (int j = 0; j < result.size(); j++) {
				if (i != j) {
					assertEquals(0.0, matrix[i][j], 1E-12);
				} else {
					assertEquals(1.0, matrix[i][j], 1E-12);					
				}
			}
		}
		
		GramSchmdit.gramSchmidt(); 
	}
}
